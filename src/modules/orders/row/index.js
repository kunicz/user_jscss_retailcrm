import { indexes, shops, noFlowers } from '@modules/orders/table/';
import { shopIcon, iconsSVG, fakeClients } from '@src/mappings';
import adres from '@modules/order/adres';
import normalize from '@helpers/normalize';
import { ctrlc } from '@helpers/clipboard';
import retailcrm from '@helpers/retailcrm';
import dates from '@helpers/dates';
import { RESERVED_ARTICLES } from '@root/config';

export default async ($tr) => {

	const orderId = normalize.int($tr.data('url'));
	const shopDb = shops.find(s => s.shop_title === getNative('–ú–∞–≥–∞–∑–∏–Ω'));
	const order = await retailcrm.get.order.byId(orderId);
	const artikul = order.items.find(item => typeof item.properties === 'object' && item.properties?.artikul?.value)?.properties.artikul.value;
	const probableSku = parseInt(artikul?.match(/^\d+/)?.[0]);
	const sku = RESERVED_ARTICLES.includes(probableSku) ? artikul : probableSku;

	type();
	coloredRow(); //–ø–æ–¥–∫—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏
	batchHide(); //–ø–∞–∫–µ—Ç–Ω–æ–µ —Å–æ–∫—Ä—ã—Ç–∏–µ
	logo();
	comments();
	onanim();
	telegram();
	phoneZakazchika();
	phonePoluchatelya();
	orderIdClickable();
	noIdentic();
	productsSummary();
	money();
	address();
	clientMsg();
	warnings();
	courier();
	sostav();
	gamma();
	customCardText();
	warningFlorist();
	lovixlube();
	printCard();

	/**
	 * –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç —è—á–µ–π–∫–∞–º —Ç–∏–ø (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏)
	 */
	function type() {
		$tr.each((_, tr) => $tr.children('td').each((i, td) => $(td).attr('type', indexes[i])));
	}

	/**
	 * –ª–æ–≥–æ –≤–º–µ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –∫–ª–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
	 */
	function logo() {
		const $td = td('–ú–∞–≥–∞–∑–∏–Ω');
		$td.prepend(`<img src="${shopIcon(get('–ú–∞–≥–∞–∑–∏–Ω'))}" class="logo" />`);
		$td.children('.native').hide();
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∞—Ä–Ω–∏–Ω–≥–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
	 */
	function warnings() {
		['–ß–∞—Ç', '–ö—É—Ä—å–µ—Ä'].forEach(c => {
			td(c)?.append('<div class="warn"></div>');
		});
	}

	/**
	 * –ø–æ–¥–∫—Ä–∞—à–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–¥–µ–ª–∏—Ç—å (–Ω–µ–æ–±—ã—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã)
	 */
	function coloredRow() {
		let color;
		if (get('–ú–∞–≥–∞–∑–∏–Ω') == 'stay true Flowers') color = 'fffaff';
		if (get('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å') == '—Å–ø–∏—Å–∞–Ω–∏–µ') color = 'fff3ee';
		if (get('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å') == '–Ω–∞–ª–∏—á–∏–µ') color = 'e6fff1';
		if (!!get('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ')?.match(/–î–û–ù–ê–¢–û–®–ù–ê–Ø/)) color = 'ffffe9';
		if (!color) return;
		$tr.children().css('background-color', '#' + color);
	}

	/**
	 * –ø–æ–º–µ—á–∞–µ—Ç –∑–∞–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è –≤–∞–∂–Ω—ã–º–∏, —á—Ç–æ–± –∏—Ö –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–∫—Ä—ã—Ç—å
	 */
	function batchHide() {
		if (
			fakeClients.includes(get('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å')) ||
			!!get('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ')?.match(/–î–û–ù–ê–¢–û–®–ù–ê–Ø/) ||
			get('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞') === '—Ä–∞–∑–æ–±—Ä–∞–Ω'
		) {
			$tr.addClass('batchHide');
		}
	}

	/**
	 * –ø–∞—Ä—Å–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏—Ö –≤ –µ–¥–∏–Ω—ã–π —Ç–µ–∫—Å—Ç
	 */
	function comments() {
		const texts = [];
		const courier = get('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞')?.replace(/\n/g, '<br>') || '';
		const florist = get('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞')?.replace(/\n/g, '<br>') || '';
		if (florist) { texts.push(`<b>–§–ª–æ—Ä–∏—Å—Ç—É</b>:<br>${florist}`); }
		if (courier) { texts.push(`<b>–ö—É—Ä—å–µ—Ä—É</b>:<br>${courier}`); }
		td('–ß–∞—Ç').html(texts.join('<br><br>'));
	}

	/**
	 * –ø–æ–º–µ—á–∞–µ—Ç —è—á–µ–π–∫—É, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∞–Ω–æ–Ω–∏–º
	 */
	function onanim() {
		if (!get('–ê–Ω–æ–Ω–∏–º')) return;
		td('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å').addClass('addComment onanim');
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —è—á–µ–π–∫—É –∏–∫–æ–Ω–∫—É —Å–º–∞–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –≤ –∑–∞–∫–∞–∑–µ
	 */
	function lovixlube() {
		if (!get('–î–æ–±–∞–≤–∏—Ç—å –ª—É–±—Ä–∏–∫–∞–Ω—Ç Lovix')) return;
		td('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ').append(iconsSVG.lovixlube);
	}

	/**
	 * —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
	 */
	function telegram() {
		const telegram = get('–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –∑–∞–∫–∞–∑—á–∏–∫–∞ (–≤ –∑–∞–∫–∞–∑–µ)');
		if (!telegram) return;
		const name = get('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å');
		const icon = iconsSVG.telegram;
		const a = `<a href="https://t.me/${telegram}" title="${telegram}" target="blank" class="telegram">${icon}${name}</a>`;
		td('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å').children('.native').html(a);
	}

	/**
	 * —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –¥–æ–±–∞–≤–ª—è—é—â—É—é –≤ –±—É—Ñ–µ—Ä –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
	 */
	function phoneZakazchika() {
		const phone = get('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω')
		if (!phone) return;
		const a = $(`<a class="phoneZakazchika">${phone.replace(/^\+7|8/, '')}</a>`);
		a.appendTo(td('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å'));
		a.on('click', e => {
			e.preventDefault();
			e.stopPropagation();
			ctrlc(get('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'));
		});
	}

	/**
	 * —Å–æ–∑–¥–∞–µ—Ç copyBtn –¥–ª—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
	 * —É –∫–Ω–æ–ø–∫–∏ —Ç—É–ª—Ç–∏–ø —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º –∏ –∏–º–µ–Ω–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
	 */
	function phonePoluchatelya() {
		const phone = get('–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è');
		if (!phone) return;
		const name = get('–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è');
		const $copyBtn = copyBtn(phone);
		$copyBtn.appendTo(td('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'));
		inlineTooltip($copyBtn, phone + (name ? ` / ${name}` : ''));
	}

	/**
	 * —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –¥–æ–±–∞–≤–ª—è—é—â—É—é –≤ –±—É—Ñ–µ—Ä id –∑–∞–∫–∞–∑–∞
	 */
	function orderIdClickable() {
		const id = td('–ù–æ–º–µ—Ä').find('a');
		id.on('click', e => {
			e.preventDefault();
			ctrlc(id.text());
		});
		id.parents('tr').children('td:first').append('<br>').append(id);
	}

	/**
	 * –ø–æ–º–µ—á–∞–µ—Ç –∑–∞–∫–∞–∑ –±–µ–∑ –∞–π–¥–µ–Ω—Ç–∏–∫–∏
	 */
	function noIdentic() {
		if (get('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É') != '–±–µ–∑ –∞–π–¥–µ–Ω—Ç–∏–∫–∏') return;
		td('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É').children('.native').css('background-color', '#f3ff92');
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞–∫ html, —á—Ç–æ–± —Ä–∞–±–æ—Ç–∞–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ br
	 */
	function productsSummary() {
		td('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ').children('.native').html(get('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ'));
	}

	/**
	 * –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑—É (—Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞, —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã –∏ —Å–∫–∏–¥–∫–∏) –≤ –æ–¥–Ω–æ–π —è—á–µ–π–∫–µ
	 */
	function money() {
		const paid = normalize.int(get('–û–ø–ª–∞—á–µ–Ω–æ'));
		const shouldPayed = sumPayments(get('–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã') || '');
		const discount = parseInt(get('–°–∫–∏–¥–∫–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö') || 0);
		let text = '–û–ø–ª–∞—á–µ–Ω–æ:<br>';
		text += paid;
		if (shouldPayed && shouldPayed != paid) text += ` –∏–∑ ${shouldPayed}`
		$(`<div class="paid">${text}</div>`).appendTo(td('–°—É–º–º–∞'));

		if (discount > 0) {
			$(`<div class="discount">${discount}%</div>`).appendTo(td('–°—É–º–º–∞'));
		}

		function sumPayments(text) {
			const amounts = text.match(/\d[\d\s]*‚ÇΩ/g) || []; // –ò—â–µ–º –≤—Å–µ —Å—É–º–º—ã —Å ‚ÇΩ
			return amounts.reduce((sum, amount) => {
				const numericValue = parseInt(amount.replace(/\s|‚ÇΩ/g, ''), 10); // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ ‚ÇΩ
				return sum + (isNaN(numericValue) ? 0 : numericValue);
			}, 0);
		}
	}

	/**
	 * –¥–µ–ª–∞–µ—Ç —á–∞—Å—Ç—å –∞–¥—Ä–µ—Å–∞ (–≥–æ—Ä–æ–¥,—É–ª–∏—Ü–∞,–¥–æ–º) –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º, –¥–æ–±–∞–≤–¥—è–µ—Ç –≤ –±—É—Ñ–µ—Ä
	 */
	function address() {
		const rawAddress = getNative('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏');
		if (!rawAddress) return;

		const formattedAddress = formatAddress(rawAddress);
		const clickableAddress = makeAddressClickable(formattedAddress);
		const finalAddress = formatMetro(clickableAddress);

		td('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏')
			.children('.native')
			.html(finalAddress)
			.find('.yadres')
			.on('click', handleAddressClick);

		//–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∞–¥—Ä–µ—Å, —É–¥–∞–ª—è—è –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –Ω–µ–Ω—É–∂–Ω—ã–µ —á–∞—Å—Ç–∏
		function formatAddress(address) {
			return address
				.replace(/\s{2,}/, '') // —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –ø—Ä–æ–±–µ–ª—ã
				.replace(/(–ú–æ—Å–∫–≤–∞ –≥–æ—Ä–æ–¥, |–≥\. –ú–æ—Å–∫–≤–∞, )/, '') // —É–±–∏—Ä–∞–µ–º –º–æ—Å–∫–≤—É
				.replace(/^\d+,\s/, ''); // —É–¥–∞–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
		}

		//–î–µ–ª–∞–µ—Ç —á–∞—Å—Ç—å –∞–¥—Ä–µ—Å–∞ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º) –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π
		function makeAddressClickable(address) {
			const parts = adres.parts.map(i => i[0]).join('|');
			const pattern = `(^.*(?:${parts})\\.\\s(?:[^,])+,\\s–¥\\.\\s(?:[^,])+(?:,\\s(?:–∫–æ—Ä–ø\\.|—Å—Ç—Ä\\.)\\s[^,]+)*)`;
			const addressRegex = new RegExp(pattern);
			return address.replace(addressRegex, '<a class="yadres">$1</a>');
		}

		//–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ç—Ä–æ –≤ –∞–¥—Ä–µ—Å–µ
		function formatMetro(address) {
			return address.replace(/(.+)(?:,\s–º–µ—Ç—Ä–æ\s(.+))/, '–º. $2<br>$1');
		}

		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É - –∫–æ–ø–∏—Ä—É–µ—Ç –∞–¥—Ä–µ—Å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
		function handleAddressClick(e) {
			e.preventDefault();
			e.stopPropagation();
			ctrlc($(e.target).text());
		}
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ–º copyBtn —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –∫–ª–∏–µ–Ω—Ç—É
	 */
	function clientMsg() {
		const templates = {
			'2steblya':
				`üì¶ –∑–æ–∫–∞–∑–µ–∫ \*\*#{{orderId}}\*\* –ø—Ä–∏–Ω—è—Ç! –ø—Ä–æ–≤–µ—Ä—å!

üìÖ \*\*–¥–æ—Å—Ç–∞–≤–∫–∞\*\*:
{{date}} {{time}} (–∏–º–µ–Ω–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ! –≤ –∫–∞–∫–æ–µ —Ç–æ—á–Ω–æ –≤—Ä–µ–º—è - –±–æ—Å—Ö –µ–≥–æ –∑–Ω–∞–µ—Ç, –∫—É—Ä—å–µ—Ä –ø–æ–µ–¥–µ—Ç –ø–æ –º–∞—Ä—à—Ä—É—Ç—É)

üè† \*\*–ø–æ –∞–¥—Ä–µ—Å—É\*\*:
{{adres}}

{{poluchatel}}

‚ö†Ô∏è –Ω—É –∏ —ç—Ç–∞ - —Ñ–æ—Ç –æ—á–∫–∏ –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –Ω–µ –ø—Ä–∏—Å—ã–ª–∞–µ–º
(—Ç—É–ø–æ –Ω–µ—Ç –Ω–∞ —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–∏ - –∫–æ–ª–æ—à–º–∞—Ç–∏–º –∫–∞–∫ –Ω–µ –≤ —Å–µ–±—è!)

üíã —á–º–æ–∫–∏! –ø–∞—Å–∏–±–∞ –∑–∞ –∑–æ–∫–∞–∑–µ–∫!`,
			'2steblya_white':
				`—Ç–≤–æ–π –∑–∞–∫–∞–∑ \*\*#{{orderId}}\*\* –ø—Ä–∏–Ω—è—Ç! –ø—Ä–æ–≤–µ—Ä—å!

\*\*–¥–æ—Å—Ç–∞–≤–∫–∞\*\*\:
{{date}} {{time}} (–∏–º–µ–Ω–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ! –≤ –∫–∞–∫–æ–µ —Ç–æ—á–Ω–æ –≤—Ä–µ–º—è - —Å–∫–∞–∑–∞—Ç—å –Ω–µ –º–æ–∂–µ–º, –∫—É—Ä—å–µ—Ä –ø–æ–µ–¥–µ—Ç –ø–æ –º–∞—Ä—à—Ä—É—Ç—É)

\*\*–ø–æ –∞–¥—Ä–µ—Å—É\*\*:
{{adres}}

{{poluchatel}}

—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –Ω–µ –ø—Ä–∏—Å—ã–ª–∞–µ–º (–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —ç—Ç–æ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏)

—Å–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!`
		}
		templates.gvozdisco = templates['2steblya'];

		const shop = shops.find(s => s.shop_title === getNative('–ú–∞–≥–∞–∑–∏–Ω'));
		if (!shop || !(shop.shop_crm_code in templates)) return;

		const template = templates[shop.shop_crm_code];
		const data = {
			orderId: String(order.id),
			date: get('–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏'),
			time: get('–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏'),
			adres: getNative('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'),
			phone: get('–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è'),
			name: get('–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è')
		}
		data.poluchatel = data.phone ? `üôé \*\*–ø–æ–ª—É—á–∞—Ç–µ–ª—å\*\*:\n${data.name ? data.name + ' / ' : ''}${data.phone}` : '';

		const output = template.replace(/\{\{(\w+)\}\}/g, (match, key) => data[key] || '');
		copyBtn(output).appendTo(td('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å'));
	}

	/**
	 * –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —è—á–µ–π–∫–∏ "–ö—É—Ä—å–µ—Ä"
	 * –ø–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤–∞–∂–µ–Ω
	 */
	function courier() {
		auto();
		if (isSamovyvoz()) return;
		if (isDone()) return;
		price();
		orderInfo();
		svodka();
		warning();
		notifyIndicator();

		/**
		 * –ø—Ä–æ–æ–≤–µ—Ä—è–µ—Ç —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏ (—Å–∞–º–æ–≤—ã–≤–æ–∑ –∏–ª–∏ –∫—É—Ä—å–µ—Ä)
		 */
		function isSamovyvoz() {
			if (get('–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏') == '–°–∞–º–æ–≤—ã–≤–æ–∑') {
				td('–ö—É—Ä—å–µ—Ä').children('.native').text('–°–∞–º–æ–≤—ã–≤–æ–∑');
				return true;
			}
			return false;
		}

		/**
		 * –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º
		 */
		function isDone() {
			return (['–í–∏—Ç—Ä–∏–Ω–∞', '–†–∞–∑–æ–±—Ä–∞–Ω', '–û—Ç–º–µ–Ω–µ–Ω'].includes(get('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')));
		}

		/**
		 * —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã –∫—É—Ä—å–µ—Ä—É
		 */
		function price() {
			td('–ö—É—Ä—å–µ—Ä').append(`<div class="price">${get('–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏') || ''}</div>`);
		}

		/**
		 * –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–≤—Ç–æ
		 */
		function auto() {
			if (!get('–ê–≤—Ç–æ–∫—É—Ä—å–µ—Ä')) return;
			td('–ö—É—Ä—å–µ—Ä').prepend(`${iconsSVG.auto_courier}<br>`);
		}

		/**
		 * –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–º–µ—â–µ–Ω–∏—è –≤ –±—É—Ñ–µ—Ä —Å–≤–æ–¥–∫–∏ –æ –∑–∞–∫–∞–∑–µ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞
		 */
		function orderInfo() {
			// –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫—É—Ä—å–µ—Ä–∞
			if (get('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏')) {
				const $copyBtn = copyBtn(getData(false));
				$copyBtn.appendTo(td('–ö—É—Ä—å–µ—Ä'));
			}

			// –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞
			td('–ö—É—Ä—å–µ—Ä').find('.native').replaceWith(() => $('<a/>', { 'class': 'native', 'href': '#', 'text': getNative('–ö—É—Ä—å–µ—Ä') }));
			td('–ö—É—Ä—å–µ—Ä').find('a.native').on('click', e => {
				e.preventDefault();
				e.stopPropagation();
				ctrlc(getData(true));
			});

			/**
			 * —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–≤–æ–æ–¥–∫—É –æ –∑–∞–∫–∞–∑–µ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞
			 * @param {bool} full - –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —É—Ä–µ–∑–∞–Ω–Ω—ã–µ
			 * @returns {string} - –¥–∞–Ω–Ω—ã–µ
			 */
			function getData(full = false) {
				const m = get('–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏').match(/(\d{1,2})\.(\d{1,2})\.(\d{4})/);
				const deliveryDate = dates.create(new Date(m[3], m[2] - 1, m[1]));
				const auto = get('–ê–≤—Ç–æ–∫—É—Ä—å–µ—Ä');
				const adres = getNative('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏');
				const time = get('–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏');
				const price = get('–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏');
				const comment = get('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞');
				const phone = get('–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è');
				const name = get('–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è');

				let output = '';
				if (deliveryDate.isToday || deliveryDate.daysTo <= 2) {
					output += `${deliveryDate.title} (${deliveryDate.strRu})`;
				} else {
					output += deliveryDate.strRu;
				}
				output += ` ${time}`;
				if (auto) output += `\n–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ —Å–≤–æ–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –∏–ª–∏ –Ω–∞ —Ç–∞–∫—Å–∏!`;
				if (adres) output += '\n' + (!full ? adres.replace(/(,\s(?:–∫–≤|—ç—Ç|–ø–æ–¥)\..+$)/, '') : adres);
				if (full) {
					if (comment) output += ` ${comment}`;
					if (phone) output += `\n${phone}`;
					if (phone && name) output += ` / ${name}`;
				}
				if (price) output += `\n${price}`;

				return output;
			}
		}

		/**
		 * —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Ä–∞–±–æ—Ç–µ –∫—É—Ä—å–µ—Ä–∞ –ø–æ –∑–∞–∫–∞–∑—É
		 * –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—â–µ–π —Å–≤–æ–¥–∫–∏ –≤ –º–æ–¥—É–ª–µ orders_table
		 */
		function svodka() {
			const name = getNative('–ö—É—Ä—å–µ—Ä');
			const price = normalize.int(td('–ö—É—Ä—å–µ—Ä').children('.price').text());
			if (!name || !price) return;
			let data = {
				name: name,
				price: price,
				phone: getNative('–¢–µ–ª–µ—Ñ–æ–Ω –∫—É—Ä—å–µ—Ä–∞'),
			};
			if (name == '–î—Ä—É–≥–æ–π –∫—É—Ä—å–µ—Ä') {
				data.comments = get('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞');
			}
			const description = getNative('–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞');
			if (description) {
				try {
					data = { ...data, ...JSON.parse(description) }
				} catch (e) { }
			}
			td('–ö—É—Ä—å–µ—Ä').data('svodka', data);
		}

		/**
		 * –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, —á—Ç–æ –∫—É—Ä—å–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω, –Ω–æ –¥–∞–Ω–Ω—ã–µ –µ–º—É –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
		 */
		function notifyIndicator() {
			if (!needNotify()) return;

			const $thisTd = td('–ö—É—Ä—å–µ—Ä');
			const status = order.customFields.courier_notified;
			const title = getTitle(status);
			const className = getClass(status);
			const $btn = $(`<div class="${className}" title="${title}"></div>`);
			const $warn = $thisTd.children('.warn');

			$btn.appendTo($warn);
			$thisTd.attr('data-notified', String(status));
			if ($thisTd.data('notified')) return;

			$btn.on('click', async (e) => {
				e.preventDefault();
				e.stopPropagation();
				order.customFields.courier_notified = true;
				const response = await retailcrm.edit.order(orderId, shopDb?.shop_crm_code, order);
				toggleIndicator(response);
				if (response && $thisTd.find('.warn .inline-tooltip').text().trim() === '–∫—É—Ä—å–µ—Ä –Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω') {
					$thisTd.find('.warn').hide();
				}
			});

			function toggleIndicator(toggle = true) {
				order.customFields.courier_notified = toggle;
				$thisTd.attr('data-notified', String(toggle));
				$btn.attr('title', getTitle(toggle));
				$btn.attr('class', getClass(toggle));
			}

			function getTitle(status) {
				return '–∫—É—Ä—å–µ—Ä ' + (status ? '' : '–Ω–µ ') + '—É–≤–µ–¥–æ–º–ª–µ–Ω';
			}

			function getClass(status) {
				return 'notify ' + (status ? 'complete' : 'cancel');
			}
		}

		/**
		 * –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞–¥–æ –ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä warning –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ c —Ç—É–ª—Ç–∏–ø–æ–º
		 */
		function warning() {
			//–ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è
			const exceptions = [
				$tr.is('.batchHide'), // —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∑–∞–∫–∞–∑
				get('–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏') != '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º', // –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ –∫—É—Ä—å–µ—Ä–æ–º
				fakeClients.includes(get('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å')), // –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–π –∫–ª–∏–µ–Ω—Ç
				!!get('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ')?.match(/–î–û–ù–ê–¢–û–®–ù–ê–Ø/) //–¥–æ–Ω–∞—Ç
			];
			if (exceptions.includes(true)) return;

			//–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
			const data = {
				'–¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏': get('–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏'),
				'–≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏': get('–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏'),
				'–∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è': get('–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è'),
				'—Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è': get('–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è'),
				'–∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏': getNative('–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'),
				'—Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏': get('–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏'),
				'–∫—É—Ä—å–µ—Ä –Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω': needNotify() ? null : 'dont-need'
			}
			const nullItems = [];
			for (const [key, value] of Object.entries(data)) {
				if (!value) nullItems.push(key);
			}
			if (!nullItems.length) return;

			const $warnIcon = $(iconsSVG.warning);
			const $warnCont = td('–ö—É—Ä—å–µ—Ä').children('.warn');
			$warnCont.prepend($warnIcon);
			inlineTooltip($warnIcon, nullItems.join('<br>'));
		}

		/**
		 * –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ —Ç–æ–º, —á—Ç–æ –∫—É—Ä—å–µ—Ä –Ω–µ –æ–ø–æ–≤–µ—â–µ–Ω
		 */
		function needNotify() {
			const conditions = [
				['–í—ã–ø–æ–ª–Ω–µ–Ω', '–†–∞–∑–æ–±—Ä–∞–Ω'].includes(get('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')), //–∑–∞–≤–µ—Ä—à–µ–Ω—ã–µ –∑–∞–∫–∞–∑—ã
				fakeClients.includes(get('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å')), //–Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–π –∫–ª–∏–µ–Ω—Ç
				!!get('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ')?.match(/–î–û–ù–ê–¢–û–®–ù–ê–Ø/), //–¥–æ–Ω–∞—Ç
				!order.delivery.data.id, //–∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω
				order.customFields.courier_notified //–∫—É—Ä—å–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω
			];
			return !conditions.includes(true);
		}
	}

	function gamma() {
		const relevantKeys = ['gamma', 'viebri-tsvet', 'tsvet', 'viebri-gammu'];

		const values = order.items
			.flatMap(i => relevantKeys
				.map(key => i.properties?.[key]?.value)
				.filter(Boolean)
			);

		if (!values.length) return;

		const gammaText = values.join(', ');
		const gammaClasses = [
			{ regex: /—è—Ä–∫/i, className: 'bright' },
			{ regex: /–Ω–µ–∂–Ω/i, className: 'soft' },
			{ regex: /—Ç[–µ—ë]–º–Ω/i, className: 'dark' },
			{ regex: /—Å–æ–ª–Ω–µ—á–Ω/i, className: 'sunny' },
			{ regex: /—Å–≤–µ—Ç–ª/i, className: 'light' }
		];
		const gammaClass = gammaClasses.find(({ regex }) => regex.test(gammaText))?.className || '';
		td('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ').prepend(`<div class="gamma ${gammaClass}">${gammaText}</div><br>`);
	}


	/**
	 * —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–∞–≤ –±—É–∫–µ—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ —Ü–≤–µ—Ç–∫–∏) –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ —Ç—É–ª—Ç–∏–ø –∏ –±—É—Ñ–µ—Ä (–ø–æ –∫–ª–∏–∫—É –Ω–∞ copyBtn)
	 */
	function sostav() {
		const sostav = get('–°–æ—Å—Ç–∞–≤');
		if (!sostav) return;

		//—Ç–æ–≤–∞—Ä—ã –≤ —Å–æ—Å—Ç–∞–≤–µ
		const nativeProduts = getNative('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ');
		const products = [];
		if (nativeProduts) {
			nativeProduts.split('—Ç),').forEach(product => {
				product = product.replace(/\(\d+\s—à.*$/, ''); //—É–¥–∞–ª—è–µ–º —à—Ç—É–∫–∏
				product = product.replace(/\s*\(.*\)/, ''); //—É–±–∏—Ä–∞–µ–º –≤—Å–µ –≤ —Å–∫–æ–±–æ—á–∫–∞—Ö
				product = product.replace(/\s-\s.*$/, ''); //—É–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –¥–µ—Ñ–∏—Å–∞
				product = product.trim();
				products.push(product);
			});
		}

		//—Ü–≤–µ—Ç—ã –≤ —Å–æ—Å—Ç–∞–≤–µ
		const flowers = [];
		sostav.replaceAll(/—à—Ç\./g, '—à—Ç.*separator*').split('*separator*').forEach(item => {
			item = item.trim();
			if (!item) return;
			item = item.replace(/\s*‚Äî.*$/, ''); //—É–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –Ω–∞–≤–∑–∞–Ω–∏—è —Ü–≤–µ—Ç–∫–∞
			item = item.replace(/\s–æ–¥–Ω|\s–∫—É—Å—Ç/, ''); //—É–±–∏—Ä–∞–µ–º –æ–¥–Ω –∏ –∫—É—Å—Ç (—Ä–æ–∑–∞ –æ–¥–Ω)
			item = item.replace(/\s-\s.*$/, ''); //—É–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –¥–µ—Ñ–∏—Å–∞
			item = item.replace(/\s\d*$/, ''); //—É–±–∏—Ä–∞–µ–º —Ü–µ–Ω—É			
			if (noFlowers.includes(item) || products.includes(item)) return;
			flowers.push(item.toLowerCase());
		});
		if (!flowers.length) return;
		const flowersString = Array.from(new Set(flowers)).sort().join(', '); //—Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É –∏ —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã + —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É

		//copyBtn
		const $copyBtn = copyBtn(flowersString);
		$copyBtn.appendTo(td('–ë—É–∫–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ'));
		inlineTooltip($copyBtn, flowersString);
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç—É–ª—Ç–∏–ø –∏ copyBtn –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –≤ –∫–∞—Ä—Ç–æ—á–∫—É –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
	 */
	function customCardText() {
		const text = get('–¢–µ–∫—Å—Ç –≤ –∫–∞—Ä—Ç–æ—á–∫—É');
		if (!text) return;
		const $td = td('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É');
		if (!get('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É')) $td.children('.native').text('—Å–æ —Å–≤–æ–∏–º —Ç–µ–∫—Å—Ç–æ–º');
		if (get('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É') != '—Å–æ —Å–≤–æ–∏–º —Ç–µ–∫—Å—Ç–æ–º') $td.addClass('addComment customCardText');
		const $copyBtn = copyBtn(text);
		$copyBtn.appendTo($td);
		inlineTooltip($copyBtn, text);
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä –ø–µ—á–∞—Ç–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ 
	 */
	async function printCard() {
		if (!get('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É')) return;
		if (!order || !sku) return;
		if (!sku) return;
		$(`<a class="print_card" href="https://php.2steblya.ru/print_card?order_id=${orderId}&sku=${sku}&shop_crm_id=${shopDb?.shop_crm_id}" target="_blank">‚éô</a>`).appendTo(td('–í—ã–µ–±—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É'));
	}

	/**
	 * –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä warning –¥–ª—è —Ñ–ª–æ—Ä–∏—Å—Ç–∞
	 */
	function warningFlorist() {
		if (!get('–ü–æ–º–µ—Ç–∏—Ç—å –¥–ª—è —Ñ–ª–æ—Ä–∏—Å—Ç–∞ –∏/–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')) return;
		const $warnCont = td('–ß–∞—Ç').children('.warn');
		const $warnIcon = $(iconsSVG.warning);
		$warnCont?.prepend($warnIcon);
	}




	// —Ñ—É–Ω–∫—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ—Å—è –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤ –∏—Å–ø–æ–ª–Ω—è—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö

	/**
	 * —Å–æ–∑–¥–∞–µ—Ç copyBtn
	 * 
	 * @param {string} str - —Ç–µ–∫—Å—Ç, –ø–æ–º–µ—â–∞–µ–º—ã–π –≤ –±—É—Ñ–µ—Ä
	 * @returns {jquery}
	 */
	function copyBtn(str) {
		const $btn = $('<a class="copyBtn"></a>');
		$btn.on('click', e => {
			e.preventDefault();
			e.stopPropagation();
			ctrlc(str);
		});
		return $btn;
	}

	/**
	 * –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≤ —Ç—Ä–∏–≥–≥–µ—Ä, –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç—É–ª—Ç–∏–ø
	 * –∏—Å–ø–æ–ª—å–∑—É—é css –∏ js —Å–∞–º–æ–π retailcrm
	 * 
	 * @param {jquery} $trigger - –æ–±—ä–µ–∫—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ç—É–ª—Ç–∏–ø 
	 * @param {string} text - —Å–æ–¥–µ—Ä–¥–∏–º–æ–µ —Ç—É–ª—Ç–∏–ø–∞
	 */
	function inlineTooltip($trigger, text) {
		$trigger.addClass('inline-tooltip-trigger');
		$trigger.after(`<div class="inline-tooltip inline-tooltip_normal user_jscss_tooltip">${text}</div>`);
	}




	// –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —è—á–µ–π–∫–∞–º –∏ –∏—Ö –¥–∞–Ω–Ω—ã–º

	function td(title) {
		return $tr.children('td').eq(indexes[title.toLowerCase()]);
	}
	function get(title) {
		return gt(td(title));
	}
	function getNative(title) {
		return gt(td(title).children('.native'));
	}
	function gt(node) {
		let content = node.clone();
		content.find('.list-status-comment').remove(); // —É–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å—Ç–∞—Ç—É—Å—É
		content.find('br').replaceWith("\n"); //–∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã –Ω–∞ –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
		content = content.text().trim();
		const excludedValues = ['‚Äî', '–ù–µ—Ç', '0 ‚ÇΩ', ''];
		return excludedValues.includes(content) ? null : content;
	}
}